extends ../../layout

block content
    .container.mt-5
        h1 Editar Usuario

        // Formulario de edición
        form(action=`/users/${usuario.id_user}/edit` method="POST")
            // Campo: Nombre
            .form-group.row
                label.col-sm-3(for="nombre") Nombre:
                .col-sm-9
                    input.form-control(type="text" id="nombre" name="nombre" value=usuario.nombre required)

            // Campo: Apellido
            .form-group.row
                label.col-sm-3(for="apellido") Apellido:
                .col-sm-9
                    input.form-control(type="text" id="apellido" name="apellido" value=usuario.apellido required)

            // Campo: Documento
            .form-group.row
                label.col-sm-3(for="documento") Documento:
                .col-sm-9
                    input.form-control(type="text" id="documento" name="documento" value=usuario.documento required)

            // Campo: Domicilio (solo si es profesional)
            if profesional
                .form-group.row
                    label.col-sm-3(for="domicilio") Domicilio:
                    .col-sm-9
                        input.form-control(type="text" id="domicilio" name="domicilio" value=profesional.domicilio)

            // Roles (checkbox para "Profesional" y "Administrador")
            .form-group.row
                label.col-sm-3 Roles:
                .col-sm-9
                    // Checkbox para Empleado
                    .form-check
                        input.form-check-input(type="checkbox" id="rolEmpleado" name="roles" value="Empleado"
                            checked=roles.find(role => role.rol_user === 'Profesional') ? true : false)
                        label.form-check-label(for="rolEmpleado") Empleado

                    // Checkbox para Administrador
                    .form-check
                        input.form-check-input(type="checkbox" id="rolAdministrador" name="roles" value="Administrador"
                            checked=roles.find(role => role.rol_user === 'Admin') ? true : false)
                        label.form-check-label(for="rolAdministrador") Administrador

            // Profesiones (no editables, solo mostrar)
            if profesionesUnicas.length > 0
                .form-group.row
                    label.col-sm-3 Profesiones:
                    .col-sm-9
                        ul
                            each profesion in profesionesUnicas
                                li= profesion

            // Especialidades con botón 'Quitar' y lista oculta de especialidades seleccionadas
            if especialidades.length > 0
                .form-group.row
                    label.col-sm-3 Especialidades:
                    .col-sm-9
                        ul#especialidades-list
                            each esp in especialidades
                                li
                                    span= esp.Especialidad.nombre_especialidad
                                    button.btn.btn-danger.btn-sm.ml-2(type="button" onclick=`removeEspecialidad('${esp.Especialidad.nombre_especialidad}')`) Quitar

                        // Lista oculta de especialidades
                        each esp in especialidades
                            input(type="hidden" name="especialidades[]" value=esp.Especialidad.nombre_especialidad)

            // Campo para agregar especialidades manualmente
            .form-group.row
                label.col-sm-3(for="nuevaEspecialidad") Agregar especialidad:
                .col-sm-9
                    input.form-control(type="text" id="nuevaEspecialidad" placeholder="Nombre de la especialidad")
                    button.btn.btn-success.btn-sm.mt-2(type="button" onclick="agregarEspecialidad()") Agregar

            // Botones de acción (Guardar y Cancelar)
            .form-group.row
                .col-sm-9.offset-sm-3
                    button.btn.btn-primary(type="submit") Guardar
                    a.btn.btn-secondary(href='/users') Cancelar

    // Script para manejar las especialidades
    script.
        function removeEspecialidad(especialidadNombre) {
            // Remover la especialidad de la lista visible
            const especialidadItems = document.querySelectorAll('#especialidades-list li');
            especialidadItems.forEach(item => {
                if (item.querySelector('span').textContent === especialidadNombre) {
                    item.remove();
                }
            });

            // Remover el campo hidden de la especialidad
            const hiddenInputs = document.querySelectorAll('input[type="hidden"][name="especialidades[]"]');
            hiddenInputs.forEach(input => {
                if (input.value === especialidadNombre) {
                    input.remove();
                }
            });
        }

        function agregarEspecialidad() {
            const nuevaEspecialidad = document.getElementById('nuevaEspecialidad').value.trim();

            // Verificar que la especialidad no esté vacía
            if (nuevaEspecialidad === '') {
                alert('Por favor, ingrese una especialidad.');
                return;
            }

            // Verificar si ya existe la especialidad en la lista visible
            const especialidadItems = document.querySelectorAll('#especialidades-list li span');
            for (let item of especialidadItems) {
                if (item.textContent === nuevaEspecialidad) {
                    alert('Esta especialidad ya está agregada.');
                    return;
                }
            }

            // Agregar la especialidad a la lista visible
            const especialidadesList = document.getElementById('especialidades-list');
            const li = document.createElement('li');
            const span = document.createElement('span');
            const button = document.createElement('button');

            span.textContent = nuevaEspecialidad;
            button.textContent = 'Quitar';
            button.className = 'btn btn-danger btn-sm ml-2';
            button.type = 'button';
            button.onclick = function() { removeEspecialidad(nuevaEspecialidad); };

            li.appendChild(span);
            li.appendChild(button);
            especialidadesList.appendChild(li);

            // Agregar un input hidden con la especialidad
            const inputHidden = document.createElement('input');
            inputHidden.type = 'hidden';
            inputHidden.name = 'especialidades[]';
            inputHidden.value = nuevaEspecialidad;

            document.querySelector('form').appendChild(inputHidden);

            // Limpiar el campo de entrada de nueva especialidad
            document.getElementById('nuevaEspecialidad').value = '';
