extends ../../layout

block content
    .container.mt-5
        .row
            .col-md-8
                h1 Editar Usuario

                form(method="POST" action=`/users/update/${usuario.id_user}`)
                    // Formulario de edición de usuario

                    .form-group
                        label(for="nombre") Nombre
                        input.form-control(type="text" id="nombre" name="nombre" value=usuario.nombre)

                    .form-group
                        label(for="apellido") Apellido
                        input.form-control(type="text" id="apellido" name="apellido" value=usuario.apellido)

                    .form-group
                        label(for="documento") Documento
                        input.form-control(type="text" id="documento" name="documento" value=usuario.documento)

                    if profesional
                        .form-group
                            label(for="domicilio") Domicilio
                            input.form-control(type="text" id="domicilio" name="domicilio" value=profesional.domicilio)

                    // Roles (Checkbox)
                    .form-check
                        input.form-check-input(type="checkbox" id="rolProfesional" name="roles" value="Profesional" checked=roles.find(role => role.rol_user === 'Profesional') ? true : false)
                        label.form-check-label(for="rolProfesional") Profesional
                    
                    .form-check
                        input.form-check-input(type="checkbox" id="rolAdmin" name="roles" value="Admin" checked=roles.find(role => role.rol_user === 'Admin') ? true : false)
                        label.form-check-label(for="rolAdmin") Admin
                    
                    // Botones de Guardar y Cancelar
                    button.btn.btn-success(type="submit") Guardar
                    a.btn.btn-secondary(href='/users') Cancelar

            // Panel lateral derecho para Profesiones
            .col-md-4
                h3 Profesiones

                each profesion in profesionesUnicas
                    .panel.panel-default
                        .panel-heading
                            h4.nombre_profesion= profesion
                        .panel-body
                            if especialidades.length > 0
                                ul.list-group
                                    each esp in especialidades.filter(e => e.Profesion.nombre_profesion === profesion)
                                        li.list-group-item(data-especialidad=esp.Especialidad.nombre_especialidad)
                                            span= esp.Especialidad.nombre_especialidad
                                            button.btn.btn-danger.float-right(data-especialidad=esp.Especialidad.nombre_especialidad)
                                                i.fa.fa-trash
                            else
                                p No hay especialidades asignadas.

                            // Botón para agregar especialidades
                            .form-group
                                select.form-control.especialidadesSelect(data-profesion=profesion)
                                    option(value="") -- Selecciona una especialidad --
                                    // Aquí se cargan las especialidades dinámicamente vía AJAX

                                button.btn.btn-primary.add-especialidad(data-profesion=profesion)
                                    i.fa.fa-plus

    script(src="https://code.jquery.com/jquery-3.6.0.min.js")

    script.
        // Lógica para eliminar especialidad usando AJAX
        $(document).ready(function() {
            // Funcionalidad para eliminar especialidad
            $('.btn-danger').on('click', function() {
                const especialidad = $(this).data('especialidad');
                const idUser = #{usuario.id_user};  // Obtén el id_user del usuario actual
                const listItem = $(this).closest('li');  // El li correspondiente a esta especialidad

                if (confirm('¿Estás seguro de que deseas eliminar esta especialidad?')) {
                    $.ajax({
                        url: `/users/deleteProfesion/${idUser}/${especialidad}`,
                        type: 'POST',
                        success: function(response) {
                            alert('Especialidad eliminada exitosamente');
                            listItem.remove();  // Eliminar el li correspondiente sin recargar la página
                        },
                        error: function(xhr, status, error) {
                            alert('Error al eliminar la especialidad: ' + xhr.responseText);
                        }
                    });
                }
            });

            // Cargar especialidades al seleccionar una profesión
            $('.panel-body').each(function() {
                const profesion = $(this).closest('.panel').find('.nombre_profesion').text(); // Obtener el nombre de la profesión
                const selectElement = $(this).find('.especialidadesSelect');

                $.ajax({
                    url: `/especialidad/${profesion}`,  // Utilizamos el nombre de la profesión para hacer la solicitud
                    type: 'GET',
                    success: function(especialidades) {
                        especialidades.forEach(function(esp) {
                            selectElement.append(new Option(esp.nombre_especialidad, esp.id_especialidad));
                        });
                    },
                    error: function(xhr, status, error) {
                        console.error('Error al cargar especialidades:', error);
                    }
                });
            });

            // Agregar especialidad a una profesión
            $('.add-especialidad').on('click', function() {
                const idUser = #{usuario.id_user};
                const profesion = $(this).closest('.panel').find('.nombre_profesion').text();
                const especialidadId = $(this).siblings('.especialidadesSelect').val();
                const especialidadNombre = $(this).siblings('.especialidadesSelect').find('option:selected').text();
                const panelBody = $(this).closest('.panel-body');

                if (!especialidadId) {
                    alert('Por favor, selecciona una especialidad.');
                    return;
                }

                $.ajax({
                    url: `/users/addEspecialidad/${idUser}/${profesion}/${especialidadId}`,
                    type: 'POST',
                    success: function(response) {
                        alert('Especialidad añadida exitosamente');
                        // Agregar la especialidad al listado en la interfaz
                        panelBody.find('ul.list-group').append(`
                            <li class="list-group-item" data-especialidad="${especialidadNombre}">
                                ${especialidadNombre}
                                <button class="btn btn-danger float-right" data-especialidad="${especialidadNombre}">
                                    <i class="fa fa-trash"></i>
                                </button>
                            </li>
                        `);
                    },
                    error: function(xhr, status, error) {
                        if (xhr.status === 400 && xhr.responseJSON && xhr.responseJSON.message) {
                            // Mostrar mensaje si la especialidad ya está asignada
                            alert(xhr.responseJSON.message);
                        } else {
                            alert('Error al agregar la especialidad: ' + error);
                        }
                    }
                });
            });
        });
